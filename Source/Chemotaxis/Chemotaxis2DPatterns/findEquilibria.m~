function [U,V,Ux,Vx]=findEquilibria(kappa,b,mass)
    
    %find the desired period
    T = 25;
    
    function res = periodResidual(mu, V0)
        % calculate the period and return the error
        [t, ~] = IVP_onePeriod(kappa, b, mu, V0);
        res = t-T;
        disp(num2str(res))
    end
   
    function res = massResidual(mu)
        %initial guess for V0
        equilCond = @(V_) V_-exp(mu+b*V_);
        equilCond(0)
        equilCond(1/b)
        minV0 = fzero(equilCond,[0,1/b]);
        maxV0 = fzero(equilCond,[1/b,-2*(mu-1/b)/b]);
        V0 = [minV0,maxV0];
        
        V0 = 1/b;
        disp(num2str(V0))
        
        % search for the correct initial condition
        V0 = fzero(@(V0_) periodResidual(mu, V0_),V0,optimset('Display','iter'));
        
        %calculate the mass ans return the error
        [~, m] = IVP_onePeriod(kappa, b, mu, V0);
        m
        res = m-mass;
    end
    mu_guess = -1.01-log(b)
    mu = fzero(@massResidual,[-1-log(b)])
    
    
end

function [period mass] = IVP_onePeriod(kappa, b, mu, V0)
    
    function res = derivatives(~,X)
        V = X(1);
        Vx = X(2);
        Vxx = 1/kappa*(V-exp(mu+b*V));

        res = [Vx; Vxx];
    end

    function [val,isterminal,direction] = events(~,X)
        val = X(2);
        isterminal = 1;
        direction = 0;
    end

    odeOpts=odeset('Events',@events,'RelTol',1e-6);
    
    [X1 Y1] = ode45(@derivatives,[0,inf],[V0,0],odeOpts);
    if X1(end)==inf
        period = nan;
        mass = nan;
        return
    end
    [X2 Y2] = ode45(@derivatives,[X1(end),inf],[Y1(end,1),Y1(end,2)],odeOpts);
    if X2(end)==inf
        period = nan;
        mass = nan;
        return
    end
    
    Y = [Y1; Y2];
    X = [X1; X2];
    V = Y(:,1);
    Vx = Y(:,2);
    U = exp(b*V+mu);
    H = Vx.^2/2 - (V.^2/2 - exp(mu+b*V)/b)/kappa;
    
    period = X(end);
    mass = trapz(X,V)/period;
end